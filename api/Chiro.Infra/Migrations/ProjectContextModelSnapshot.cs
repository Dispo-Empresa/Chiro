// <auto-generated />
using System;
using Chiro.Infra;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Chiro.Infra.Migrations
{
    [DbContext(typeof(ProjectContext))]
    partial class ProjectContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Chiro.Domain.Entities.BoardAction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Height")
                        .HasColumnType("double precision");

                    b.Property<double>("PositionX")
                        .HasColumnType("double precision");

                    b.Property<double>("PositionY")
                        .HasColumnType("double precision");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<double>("Width")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("BoardActions");
                });

            modelBuilder.Entity("Chiro.Domain.Entities.Project", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Chiro.Domain.Entities.TimelineAction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("AdjustedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("BoardActionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ConcludedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("LinkedTimelineActionId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("BoardActionId");

                    b.HasIndex("LinkedTimelineActionId");

                    b.HasIndex("ProjectId");

                    b.ToTable("TimelineActions");
                });

            modelBuilder.Entity("Chiro.Domain.Entities.BoardAction", b =>
                {
                    b.HasOne("Chiro.Domain.Entities.Project", "Project")
                        .WithMany("BoardActions")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Chiro.Domain.Entities.TimelineAction", b =>
                {
                    b.HasOne("Chiro.Domain.Entities.BoardAction", "BoardAction")
                        .WithMany()
                        .HasForeignKey("BoardActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Chiro.Domain.Entities.TimelineAction", "LinkedTimelineAction")
                        .WithMany()
                        .HasForeignKey("LinkedTimelineActionId");

                    b.HasOne("Chiro.Domain.Entities.Project", "Project")
                        .WithMany("TimelineActions")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BoardAction");

                    b.Navigation("LinkedTimelineAction");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Chiro.Domain.Entities.Project", b =>
                {
                    b.Navigation("BoardActions");

                    b.Navigation("TimelineActions");
                });
#pragma warning restore 612, 618
        }
    }
}
